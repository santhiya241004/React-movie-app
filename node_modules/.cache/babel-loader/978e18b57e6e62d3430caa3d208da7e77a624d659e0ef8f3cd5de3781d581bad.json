{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie-app\\\\src\\\\app.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport MovieCard from \"./components/MovieCard\";\nimport WatchlistPage from \"./pages/WatchlistPage\";\nimport Navbar from \"./components/navbar\";\nimport SearchBar from \"./components/SearchBar\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\nconst MovieList = ({\n  query\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const fetchMovies = async () => {\n    try {\n      const res = await fetch(`https://www.omdbapi.com/?apikey=${OMDB_API_KEY}&s=${query}`);\n      const data = await res.json();\n      if (data.Search) {\n        const formatted = data.Search.map(movie => ({\n          id: movie.imdbID,\n          title: movie.Title,\n          posterUrl: movie.Poster,\n          previewUrl: \"/preview.mp4\" // Dummy preview\n        }));\n        setMovies(formatted);\n      } else {\n        setMovies([]);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch OMDb data:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container px-4\",\n    children: movies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"No movies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = MovieList;\nconst App = () => {\n  _s2();\n  const [searchQuery, setSearchQuery] = useState(\"batman\");\n  const handleSearch = newQuery => {\n    setSearchQuery(newQuery);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-black min-h-screen text-white\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n              onSearch: handleSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n              query: searchQuery\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/watchlist\",\n          element: /*#__PURE__*/_jsxDEV(WatchlistPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"qDBxvqCVymS+wvwLSBC7UjvXBYw=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"MovieList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","MovieCard","WatchlistPage","Navbar","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","OMDB_API_KEY","process","env","REACT_APP_OMDB_API_KEY","MovieList","query","_s","movies","setMovies","fetchMovies","res","fetch","data","json","Search","formatted","map","movie","id","imdbID","title","Title","posterUrl","Poster","previewUrl","err","console","error","className","children","length","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","searchQuery","setSearchQuery","handleSearch","newQuery","path","element","onSearch","_c2","$RefreshReg$"],"sources":["D:/Movie-app/src/app.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport MovieCard from \"./components/MovieCard\";\r\nimport WatchlistPage from \"./pages/WatchlistPage\";\r\nimport Navbar from \"./components/navbar\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport \"./index.css\";\r\n\r\nconst OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\r\n\r\nconst MovieList = ({ query }) => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const fetchMovies = async () => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${OMDB_API_KEY}&s=${query}`\r\n      );\r\n      const data = await res.json();\r\n      if (data.Search) {\r\n        const formatted = data.Search.map((movie) => ({\r\n          id: movie.imdbID,\r\n          title: movie.Title,\r\n          posterUrl: movie.Poster,\r\n          previewUrl: \"/preview.mp4\", // Dummy preview\r\n        }));\r\n        setMovies(formatted);\r\n      } else {\r\n        setMovies([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch OMDb data:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"card-container px-4\">\r\n      {movies.length === 0 ? (\r\n  <p style={{ color: \"white\" }}>No movies found.</p>\r\n) : (\r\n  <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n    {movies.map((movie) => (\r\n      <MovieCard key={movie.id} movie={movie} />\r\n    ))}\r\n  </div>\r\n)}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [searchQuery, setSearchQuery] = useState(\"batman\");\r\n\r\n  const handleSearch = (newQuery) => {\r\n    setSearchQuery(newQuery);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"bg-black min-h-screen text-white\">\r\n        <Navbar />\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <>\r\n                <SearchBar onSearch={handleSearch} />\r\n                <MovieList query={searchQuery} />\r\n              </>\r\n            }\r\n          />\r\n          <Route path=\"/watchlist\" element={<WatchlistPage />} />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMuB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,mCAAmCX,YAAY,MAAMK,KAAK,EAC5D,CAAC;MACD,MAAMO,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACE,MAAM,EAAE;QACf,MAAMC,SAAS,GAAGH,IAAI,CAACE,MAAM,CAACE,GAAG,CAAEC,KAAK,KAAM;UAC5CC,EAAE,EAAED,KAAK,CAACE,MAAM;UAChBC,KAAK,EAAEH,KAAK,CAACI,KAAK;UAClBC,SAAS,EAAEL,KAAK,CAACM,MAAM;UACvBC,UAAU,EAAE,cAAc,CAAE;QAC9B,CAAC,CAAC,CAAC;QACHhB,SAAS,CAACO,SAAS,CAAC;MACtB,CAAC,MAAM;QACLP,SAAS,CAAC,EAAE,CAAC;MACf;IACF,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAClD;EACF,CAAC;EAEDtC,SAAS,CAAC,MAAM;IACdsB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,oBACER,OAAA;IAAK+B,SAAS,EAAC,qBAAqB;IAAAC,QAAA,EACjCtB,MAAM,CAACuB,MAAM,KAAK,CAAC,gBACxBjC,OAAA;MAAGkC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAH,QAAA,EAAC;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAElDvC,OAAA;MAAK+B,SAAS,EAAC,qEAAqE;MAAAC,QAAA,EACjFtB,MAAM,CAACS,GAAG,CAAEC,KAAK,iBAChBpB,OAAA,CAACL,SAAS;QAAgByB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEQ,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA3CIF,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AA6Cf,MAAMkC,GAAG,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGvD,QAAQ,CAAC,QAAQ,CAAC;EAExD,MAAMwD,YAAY,GAAIC,QAAQ,IAAK;IACjCF,cAAc,CAACE,QAAQ,CAAC;EAC1B,CAAC;EAED,oBACE9C,OAAA,CAACR,MAAM;IAAAwC,QAAA,eACLhC,OAAA;MAAK+B,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC/ChC,OAAA,CAACH,MAAM;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVvC,OAAA,CAACP,MAAM;QAAAuC,QAAA,gBACLhC,OAAA,CAACN,KAAK;UACJqD,IAAI,EAAC,GAAG;UACRC,OAAO,eACLhD,OAAA,CAAAE,SAAA;YAAA8B,QAAA,gBACEhC,OAAA,CAACF,SAAS;cAACmD,QAAQ,EAAEJ;YAAa;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACrCvC,OAAA,CAACO,SAAS;cAACC,KAAK,EAAEmC;YAAY;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,eACjC;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACFvC,OAAA,CAACN,KAAK;UAACqD,IAAI,EAAC,YAAY;UAACC,OAAO,eAAEhD,OAAA,CAACJ,aAAa;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACG,GAAA,CA1BID,GAAG;AAAAS,GAAA,GAAHT,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}