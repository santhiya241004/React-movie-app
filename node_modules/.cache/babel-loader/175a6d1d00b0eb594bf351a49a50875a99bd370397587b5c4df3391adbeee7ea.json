{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie-app\\\\src\\\\components\\\\MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport \"../styles/MovieList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TMDB_API_KEY = process.env.REACT_APP_TMDB_API_KEY;\nconst MovieList = () => {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"batman\");\n  const [query, setQuery] = useState(\"batman\");\n  const [movies, setMovies] = useState([]);\n  const fetchMovies = async () => {\n    try {\n      const res = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${query}`);\n      const data = await res.json();\n      if (data.results) {\n        const formatted = await Promise.all(data.results.map(async movie => {\n          let trailerUrl = null;\n          try {\n            var _trailerData$results;\n            const trailerRes = await fetch(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${TMDB_API_KEY}`);\n            const trailerData = await trailerRes.json();\n            const trailer = (_trailerData$results = trailerData.results) === null || _trailerData$results === void 0 ? void 0 : _trailerData$results.find(vid => vid.type === \"Trailer\" && vid.site === \"YouTube\");\n            if (trailer) {\n              trailerUrl = `https://www.youtube.com/embed/${trailer.key}?autoplay=1&mute=1&controls=0`;\n            }\n          } catch (err) {\n            console.warn(\"Trailer fetch failed for movie:\", movie.title);\n          }\n          return {\n            id: movie.id,\n            title: movie.title,\n            posterUrl: movie.poster_path ? `https://image.tmdb.org/t/p/w342${movie.poster_path}` : \"/no-image.png\",\n            previewUrl: trailerUrl\n          };\n        }));\n        setMovies(formatted);\n      } else {\n        setMovies([]);\n      }\n    } catch (err) {\n      console.error(\"TMDb fetch error:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchInput,\n        onChange: e => setSearchInput(e.target.value),\n        placeholder: \"Search movies...\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setQuery(searchInput),\n        className: \"search-button\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-scroll-container\",\n      children: movies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white\",\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"2SvCrf75TpsGfj2kH446KizHauQ=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","MovieCard","jsxDEV","_jsxDEV","TMDB_API_KEY","process","env","REACT_APP_TMDB_API_KEY","MovieList","_s","searchInput","setSearchInput","query","setQuery","movies","setMovies","fetchMovies","res","fetch","data","json","results","formatted","Promise","all","map","movie","trailerUrl","_trailerData$results","trailerRes","id","trailerData","trailer","find","vid","type","site","key","err","console","warn","title","posterUrl","poster_path","previewUrl","error","className","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","_c","$RefreshReg$"],"sources":["D:/Movie-app/src/components/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport \"../styles/MovieList.css\";\r\n\r\nconst TMDB_API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\nconst MovieList = () => {\r\n  const [searchInput, setSearchInput] = useState(\"batman\");\r\n  const [query, setQuery] = useState(\"batman\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const fetchMovies = async () => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${query}`\r\n      );\r\n      const data = await res.json();\r\n\r\n      if (data.results) {\r\n        const formatted = await Promise.all(\r\n          data.results.map(async (movie) => {\r\n            let trailerUrl = null;\r\n\r\n            try {\r\n              const trailerRes = await fetch(\r\n                `https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${TMDB_API_KEY}`\r\n              );\r\n              const trailerData = await trailerRes.json();\r\n\r\n              const trailer = trailerData.results?.find(\r\n                (vid) => vid.type === \"Trailer\" && vid.site === \"YouTube\"\r\n              );\r\n\r\n              if (trailer) {\r\n                trailerUrl = `https://www.youtube.com/embed/${trailer.key}?autoplay=1&mute=1&controls=0`;\r\n              }\r\n            } catch (err) {\r\n              console.warn(\"Trailer fetch failed for movie:\", movie.title);\r\n            }\r\n\r\n            return {\r\n              id: movie.id,\r\n              title: movie.title,\r\n              posterUrl: movie.poster_path\r\n                ? `https://image.tmdb.org/t/p/w342${movie.poster_path}`\r\n                : \"/no-image.png\",\r\n              previewUrl: trailerUrl,\r\n            };\r\n          })\r\n        );\r\n        setMovies(formatted);\r\n      } else {\r\n        setMovies([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"TMDb fetch error:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"movie-list-container\">\r\n      {/* Search Bar */}\r\n      <div className=\"search-bar-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          value={searchInput}\r\n          onChange={(e) => setSearchInput(e.target.value)}\r\n          placeholder=\"Search movies...\"\r\n          className=\"search-input\"\r\n        />\r\n        <button onClick={() => setQuery(searchInput)} className=\"search-button\">\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      {/* Movie Cards */}\r\n      <div className=\"movie-scroll-container\">\r\n        {movies.length === 0 ? (\r\n          <p className=\"text-white\">No movies found.</p>\r\n        ) : (\r\n          movies.map((movie) => <MovieCard key={movie.id} movie={movie} />)\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,QAAQ,CAAC;EACxD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,qDAAqDd,YAAY,UAAUQ,KAAK,EAClF,CAAC;MACD,MAAMO,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAE7B,IAAID,IAAI,CAACE,OAAO,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CACjCL,IAAI,CAACE,OAAO,CAACI,GAAG,CAAC,MAAOC,KAAK,IAAK;UAChC,IAAIC,UAAU,GAAG,IAAI;UAErB,IAAI;YAAA,IAAAC,oBAAA;YACF,MAAMC,UAAU,GAAG,MAAMX,KAAK,CAC5B,sCAAsCQ,KAAK,CAACI,EAAE,mBAAmB1B,YAAY,EAC/E,CAAC;YACD,MAAM2B,WAAW,GAAG,MAAMF,UAAU,CAACT,IAAI,CAAC,CAAC;YAE3C,MAAMY,OAAO,IAAAJ,oBAAA,GAAGG,WAAW,CAACV,OAAO,cAAAO,oBAAA,uBAAnBA,oBAAA,CAAqBK,IAAI,CACtCC,GAAG,IAAKA,GAAG,CAACC,IAAI,KAAK,SAAS,IAAID,GAAG,CAACE,IAAI,KAAK,SAClD,CAAC;YAED,IAAIJ,OAAO,EAAE;cACXL,UAAU,GAAG,iCAAiCK,OAAO,CAACK,GAAG,+BAA+B;YAC1F;UACF,CAAC,CAAC,OAAOC,GAAG,EAAE;YACZC,OAAO,CAACC,IAAI,CAAC,iCAAiC,EAAEd,KAAK,CAACe,KAAK,CAAC;UAC9D;UAEA,OAAO;YACLX,EAAE,EAAEJ,KAAK,CAACI,EAAE;YACZW,KAAK,EAAEf,KAAK,CAACe,KAAK;YAClBC,SAAS,EAAEhB,KAAK,CAACiB,WAAW,GACxB,kCAAkCjB,KAAK,CAACiB,WAAW,EAAE,GACrD,eAAe;YACnBC,UAAU,EAAEjB;UACd,CAAC;QACH,CAAC,CACH,CAAC;QACDZ,SAAS,CAACO,SAAS,CAAC;MACtB,CAAC,MAAM;QACLP,SAAS,CAAC,EAAE,CAAC;MACf;IACF,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZC,OAAO,CAACM,KAAK,CAAC,mBAAmB,EAAEP,GAAG,CAAC;IACzC;EACF,CAAC;EAEDtC,SAAS,CAAC,MAAM;IACdgB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,oBACET,OAAA;IAAK2C,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBAEnC5C,OAAA;MAAK2C,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC5C,OAAA;QACEgC,IAAI,EAAC,MAAM;QACXa,KAAK,EAAEtC,WAAY;QACnBuC,QAAQ,EAAGC,CAAC,IAAKvC,cAAc,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAChDI,WAAW,EAAC,kBAAkB;QAC9BN,SAAS,EAAC;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFrD,OAAA;QAAQsD,OAAO,EAAEA,CAAA,KAAM5C,QAAQ,CAACH,WAAW,CAAE;QAACoC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAExE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNrD,OAAA;MAAK2C,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpCjC,MAAM,CAAC4C,MAAM,KAAK,CAAC,gBAClBvD,OAAA;QAAG2C,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE9C1C,MAAM,CAACW,GAAG,CAAEC,KAAK,iBAAKvB,OAAA,CAACF,SAAS;QAAgByB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACI,EAAE;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC;IACjE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/C,EAAA,CAnFID,SAAS;AAAAmD,EAAA,GAATnD,SAAS;AAqFf,eAAeA,SAAS;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}