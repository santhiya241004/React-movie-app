{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movie-app\\\\src\\\\pages\\\\MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MovieCard from \"../components/MovieCard\";\nimport SearchBar from \"../components/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\nconst MovieList = () => {\n  _s();\n  const [query, setQuery] = useState(\"batman\");\n  const [movies, setMovies] = useState([]);\n  const fetchMovies = async () => {\n    try {\n      const res = await fetch(`https://www.omdbapi.com/?apikey=${OMDB_API_KEY}&s=${query}`);\n      const data = await res.json();\n      if (data.Search) {\n        const formatted = data.Search.map(movie => ({\n          id: movie.imdbID,\n          title: movie.Title,\n          posterUrl: movie.Poster,\n          previewUrl: \"/preview.mp4\" // Optional placeholder\n        }));\n        setMovies(formatted);\n      } else {\n        setMovies([]);\n      }\n    } catch (err) {\n      console.error(\"Error fetching movies:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [query]);\n  const handleSearch = term => {\n    setQuery(term);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-black text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center pt-8 pb-4\",\n      children: /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8 px-6 pb-12\",\n      children: movies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"col-span-full text-center text-gray-400\",\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"uvVc30giQRwLdaTA4Mqg56FulSg=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","MovieCard","SearchBar","jsxDEV","_jsxDEV","OMDB_API_KEY","process","env","REACT_APP_OMDB_API_KEY","MovieList","_s","query","setQuery","movies","setMovies","fetchMovies","res","fetch","data","json","Search","formatted","map","movie","id","imdbID","title","Title","posterUrl","Poster","previewUrl","err","console","error","handleSearch","term","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/Movie-app/src/pages/MovieList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nconst OMDB_API_KEY = process.env.REACT_APP_OMDB_API_KEY;\r\n\r\nconst MovieList = () => {\r\n  const [query, setQuery] = useState(\"batman\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const fetchMovies = async () => {\r\n    try {\r\n      const res = await fetch(`https://www.omdbapi.com/?apikey=${OMDB_API_KEY}&s=${query}`);\r\n      const data = await res.json();\r\n      if (data.Search) {\r\n        const formatted = data.Search.map((movie) => ({\r\n          id: movie.imdbID,\r\n          title: movie.Title,\r\n          posterUrl: movie.Poster,\r\n          previewUrl: \"/preview.mp4\", // Optional placeholder\r\n        }));\r\n        setMovies(formatted);\r\n      } else {\r\n        setMovies([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching movies:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, [query]);\r\n\r\n  const handleSearch = (term) => {\r\n    setQuery(term);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black text-white\">\r\n      {/* Search bar centered at top */}\r\n      <div className=\"flex justify-center pt-8 pb-4\">\r\n        <SearchBar onSearch={handleSearch} />\r\n      </div>\r\n\r\n      {/* Movie Grid */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-8 px-6 pb-12\">\r\n        {movies.length === 0 ? (\r\n          <p className=\"col-span-full text-center text-gray-400\">No movies found.</p>\r\n        ) : (\r\n          movies.map((movie) => <MovieCard key={movie.id} movie={movie} />)\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmCZ,YAAY,MAAMM,KAAK,EAAE,CAAC;MACrF,MAAMO,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACE,MAAM,EAAE;QACf,MAAMC,SAAS,GAAGH,IAAI,CAACE,MAAM,CAACE,GAAG,CAAEC,KAAK,KAAM;UAC5CC,EAAE,EAAED,KAAK,CAACE,MAAM;UAChBC,KAAK,EAAEH,KAAK,CAACI,KAAK;UAClBC,SAAS,EAAEL,KAAK,CAACM,MAAM;UACvBC,UAAU,EAAE,cAAc,CAAE;QAC9B,CAAC,CAAC,CAAC;QACHhB,SAAS,CAACO,SAAS,CAAC;MACtB,CAAC,MAAM;QACLP,SAAS,CAAC,EAAE,CAAC;MACf;IACF,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACdgB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMuB,YAAY,GAAIC,IAAI,IAAK;IAC7BvB,QAAQ,CAACuB,IAAI,CAAC;EAChB,CAAC;EAED,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,kCAAkC;IAAAC,QAAA,gBAE/CjC,OAAA;MAAKgC,SAAS,EAAC,+BAA+B;MAAAC,QAAA,eAC5CjC,OAAA,CAACF,SAAS;QAACoC,QAAQ,EAAEJ;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAGNtC,OAAA;MAAKgC,SAAS,EAAC,gFAAgF;MAAAC,QAAA,EAC5FxB,MAAM,CAAC8B,MAAM,KAAK,CAAC,gBAClBvC,OAAA;QAAGgC,SAAS,EAAC,yCAAyC;QAAAC,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE3E7B,MAAM,CAACS,GAAG,CAAEC,KAAK,iBAAKnB,OAAA,CAACH,SAAS;QAAgBsB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC;IACjE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CAjDID,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAmDf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}