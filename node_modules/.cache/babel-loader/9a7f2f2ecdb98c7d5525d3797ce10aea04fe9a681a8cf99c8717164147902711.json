{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst WATCHLIST_KEY = \"my-movie-watchlist\";\nexport const useWatchlist = () => {\n  _s();\n  const [watchlist, setWatchlist] = useState([]);\n\n  // Load watchlist from localStorage on mount\n  useEffect(() => {\n    const stored = localStorage.getItem(WATCHLIST_KEY);\n    if (stored) {\n      try {\n        const parsed = JSON.parse(stored);\n        if (Array.isArray(parsed)) {\n          setWatchlist(parsed);\n        } else {\n          console.warn(\"Invalid watchlist data in localStorage\");\n        }\n      } catch (error) {\n        console.error(\"Error parsing watchlist from localStorage:\", error);\n      }\n    }\n  }, []);\n\n  // Save to localStorage when watchlist changes\n  useEffect(() => {\n    localStorage.setItem(WATCHLIST_KEY, JSON.stringify(watchlist));\n    console.log(\"Updated watchlist:\", watchlist);\n  }, [watchlist]);\n\n  // Add or remove a movie from watchlist\n  const toggleWatchlist = movie => {\n    const movieId = movie === null || movie === void 0 ? void 0 : movie.id;\n    if (!movieId) {\n      console.warn(\"Invalid movie object passed to toggleWatchlist\", movie);\n      return;\n    }\n    const exists = watchlist.some(m => m.id === movieId);\n    if (exists) {\n      setWatchlist(prev => prev.filter(m => m.id !== movieId));\n    } else {\n      setWatchlist(prev => [...prev, movie]);\n    }\n  };\n\n  // Check if movie is in watchlist\n  const isInWatchlist = movie => {\n    return watchlist.some(m => m.id === (movie === null || movie === void 0 ? void 0 : movie.id));\n  };\n  return {\n    watchlist,\n    toggleWatchlist,\n    isInWatchlist\n  };\n};\n_s(useWatchlist, \"eP/7E0LW+QXyxpJxgX/s4gBwAw8=\");","map":{"version":3,"names":["useState","useEffect","WATCHLIST_KEY","useWatchlist","_s","watchlist","setWatchlist","stored","localStorage","getItem","parsed","JSON","parse","Array","isArray","console","warn","error","setItem","stringify","log","toggleWatchlist","movie","movieId","id","exists","some","m","prev","filter","isInWatchlist"],"sources":["D:/Movie-app/src/hooks/useWatchlist.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst WATCHLIST_KEY = \"my-movie-watchlist\";\r\n\r\nexport const useWatchlist = () => {\r\n  const [watchlist, setWatchlist] = useState([]);\r\n\r\n  // Load watchlist from localStorage on mount\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(WATCHLIST_KEY);\r\n    if (stored) {\r\n      try {\r\n        const parsed = JSON.parse(stored);\r\n        if (Array.isArray(parsed)) {\r\n          setWatchlist(parsed);\r\n        } else {\r\n          console.warn(\"Invalid watchlist data in localStorage\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing watchlist from localStorage:\", error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save to localStorage when watchlist changes\r\n  useEffect(() => {\r\n    localStorage.setItem(WATCHLIST_KEY, JSON.stringify(watchlist));\r\n    console.log(\"Updated watchlist:\", watchlist);\r\n  }, [watchlist]);\r\n\r\n  // Add or remove a movie from watchlist\r\n  const toggleWatchlist = (movie) => {\r\n    const movieId = movie?.id;\r\n    if (!movieId) {\r\n      console.warn(\"Invalid movie object passed to toggleWatchlist\", movie);\r\n      return;\r\n    }\r\n\r\n    const exists = watchlist.some((m) => m.id === movieId);\r\n\r\n    if (exists) {\r\n      setWatchlist((prev) => prev.filter((m) => m.id !== movieId));\r\n    } else {\r\n      setWatchlist((prev) => [...prev, movie]);\r\n    }\r\n  };\r\n\r\n  // Check if movie is in watchlist\r\n  const isInWatchlist = (movie) => {\r\n    return watchlist.some((m) => m.id === movie?.id);\r\n  };\r\n\r\n  return {\r\n    watchlist,\r\n    toggleWatchlist,\r\n    isInWatchlist,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,aAAa,GAAG,oBAAoB;AAE1C,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMM,MAAM,GAAGC,YAAY,CAACC,OAAO,CAACP,aAAa,CAAC;IAClD,IAAIK,MAAM,EAAE;MACV,IAAI;QACF,MAAMG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACL,MAAM,CAAC;QACjC,IAAIM,KAAK,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;UACzBJ,YAAY,CAACI,MAAM,CAAC;QACtB,CAAC,MAAM;UACLK,OAAO,CAACC,IAAI,CAAC,wCAAwC,CAAC;QACxD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhB,SAAS,CAAC,MAAM;IACdO,YAAY,CAACU,OAAO,CAAChB,aAAa,EAAES,IAAI,CAACQ,SAAS,CAACd,SAAS,CAAC,CAAC;IAC9DU,OAAO,CAACK,GAAG,CAAC,oBAAoB,EAAEf,SAAS,CAAC;EAC9C,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMgB,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,OAAO,GAAGD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,EAAE;IACzB,IAAI,CAACD,OAAO,EAAE;MACZR,OAAO,CAACC,IAAI,CAAC,gDAAgD,EAAEM,KAAK,CAAC;MACrE;IACF;IAEA,MAAMG,MAAM,GAAGpB,SAAS,CAACqB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKD,OAAO,CAAC;IAEtD,IAAIE,MAAM,EAAE;MACVnB,YAAY,CAAEsB,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAEF,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKD,OAAO,CAAC,CAAC;IAC9D,CAAC,MAAM;MACLjB,YAAY,CAAEsB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEN,KAAK,CAAC,CAAC;IAC1C;EACF,CAAC;;EAED;EACA,MAAMQ,aAAa,GAAIR,KAAK,IAAK;IAC/B,OAAOjB,SAAS,CAACqB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,EAAE,MAAKF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,EAAE,EAAC;EAClD,CAAC;EAED,OAAO;IACLnB,SAAS;IACTgB,eAAe;IACfS;EACF,CAAC;AACH,CAAC;AAAC1B,EAAA,CArDWD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}