{"ast":null,"code":"// src/utils/fetchMovieTrailer.js\nconst TMDB_API_KEY = process.env.REACT_APP_TMDB_API_KEY;\nexport const fetchTrailerUrl = async movieTitle => {\n  try {\n    var _searchData$results, _videoData$results;\n    // Step 1: Search movie by name\n    const searchRes = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${encodeURIComponent(movieTitle)}`);\n    const searchData = await searchRes.json();\n    const movie = (_searchData$results = searchData.results) === null || _searchData$results === void 0 ? void 0 : _searchData$results[0];\n    if (!movie) return null;\n\n    // Step 2: Fetch video info using movie ID\n    const videoRes = await fetch(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${TMDB_API_KEY}`);\n    const videoData = await videoRes.json();\n    const trailer = (_videoData$results = videoData.results) === null || _videoData$results === void 0 ? void 0 : _videoData$results.find(vid => vid.type === \"Trailer\" && vid.site === \"YouTube\");\n    return trailer ? `https://www.youtube.com/embed/${trailer.key}` : null;\n  } catch (err) {\n    console.error(\"TMDb trailer fetch failed:\", err);\n    return null;\n  }\n};","map":{"version":3,"names":["TMDB_API_KEY","process","env","REACT_APP_TMDB_API_KEY","fetchTrailerUrl","movieTitle","_searchData$results","_videoData$results","searchRes","fetch","encodeURIComponent","searchData","json","movie","results","videoRes","id","videoData","trailer","find","vid","type","site","key","err","console","error"],"sources":["D:/Movie-app/src/utils/fetchMovieTrailer.js"],"sourcesContent":["// src/utils/fetchMovieTrailer.js\r\nconst TMDB_API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\nexport const fetchTrailerUrl = async (movieTitle) => {\r\n  try {\r\n    // Step 1: Search movie by name\r\n    const searchRes = await fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=${TMDB_API_KEY}&query=${encodeURIComponent(movieTitle)}`\r\n    );\r\n    const searchData = await searchRes.json();\r\n    const movie = searchData.results?.[0];\r\n\r\n    if (!movie) return null;\r\n\r\n    // Step 2: Fetch video info using movie ID\r\n    const videoRes = await fetch(\r\n      `https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${TMDB_API_KEY}`\r\n    );\r\n    const videoData = await videoRes.json();\r\n\r\n    const trailer = videoData.results?.find((vid) => vid.type === \"Trailer\" && vid.site === \"YouTube\");\r\n\r\n    return trailer ? `https://www.youtube.com/embed/${trailer.key}` : null;\r\n  } catch (err) {\r\n    console.error(\"TMDb trailer fetch failed:\", err);\r\n    return null;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,OAAO,MAAMC,eAAe,GAAG,MAAOC,UAAU,IAAK;EACnD,IAAI;IAAA,IAAAC,mBAAA,EAAAC,kBAAA;IACF;IACA,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAC3B,qDAAqDT,YAAY,UAAUU,kBAAkB,CAACL,UAAU,CAAC,EAC3G,CAAC;IACD,MAAMM,UAAU,GAAG,MAAMH,SAAS,CAACI,IAAI,CAAC,CAAC;IACzC,MAAMC,KAAK,IAAAP,mBAAA,GAAGK,UAAU,CAACG,OAAO,cAAAR,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IAErC,IAAI,CAACO,KAAK,EAAE,OAAO,IAAI;;IAEvB;IACA,MAAME,QAAQ,GAAG,MAAMN,KAAK,CAC1B,sCAAsCI,KAAK,CAACG,EAAE,mBAAmBhB,YAAY,EAC/E,CAAC;IACD,MAAMiB,SAAS,GAAG,MAAMF,QAAQ,CAACH,IAAI,CAAC,CAAC;IAEvC,MAAMM,OAAO,IAAAX,kBAAA,GAAGU,SAAS,CAACH,OAAO,cAAAP,kBAAA,uBAAjBA,kBAAA,CAAmBY,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,KAAK,SAAS,IAAID,GAAG,CAACE,IAAI,KAAK,SAAS,CAAC;IAElG,OAAOJ,OAAO,GAAG,iCAAiCA,OAAO,CAACK,GAAG,EAAE,GAAG,IAAI;EACxE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAChD,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}